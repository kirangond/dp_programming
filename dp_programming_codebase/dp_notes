Aug 13 

---By Adity Verma Playlist--- 

1. Introduction
Dynamic programming
 - It is enhaanced recursion
 
how to identify
 - Recursion -(Choice,Overlapping)
 - Optimal
 
how to approach
 - Recursive - Memoize - Top down approach 
 
 Parent questions
 1. 0/1 knapsack
 2. unbounded kanpsack
 3. fibonacci
 4. LCS
 5. LIS
 6. Kaden's algo
 7. matrix chain multiplication
 8. dp on tress
 9. dp on grids
 10. others
 
 2. Types of kanpsack
    1. fractional. (it's greedy approach)
	2. o/1
	3. unbounded 
	
	problems:
	  1. subset sum
	  2. equal sum partition
	  3. count of subset sum
	  4. minimnum subset sum diff
	  5. target sum
	  6. number of subset of given diff
	  
	
   how to approach
             I1  I2  I3 I4
   wt[]      1    3   4  5
   value[]   1     4   5  7
   w/capacity 7
   o/p : max profit  (max is a optimal) (choice is whether to add item or not in kanpsack)
   
   kapsack consider as a bag
   
   If a bag can hold 7kg if 1 kg is remainig
   
   fractional:
      item1 wt: 2kg val : 20
	  we can fraction as 1 and put the value 10 in it.
	  
   0/1
     we can add entire 2kg or we should not add
	 0 - not add
	 1 - add entirely no 0.5 in 0/1
	 
   unbounded
    - we can multiple instance of 2kg in it
	
	Approach
	 Recursive - memoization - top down
	 recusrion+storage(memoization/top down)


   
   